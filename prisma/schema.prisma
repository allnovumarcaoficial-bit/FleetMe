generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Vehicle {
  id                                Int      @id @default(autoincrement())
  marca                             String
  modelo                            String
  vin                               String   @unique
  matricula                         String   @unique
  fecha_compra                      DateTime
  fecha_vencimiento_licencia_operativa DateTime
  fecha_vencimiento_circulacion     DateTime
  fecha_vencimiento_somaton         DateTime
  estado                            String
  gps                               Boolean
  listado_municipios                String   // Stored as JSON string for SQLite
  tipoNombre                        String? // Store vehicle type as a string
  vehicleDrivers                    VehicleDriver[] // Explicit many-to-many relation
}

model VehicleType {
  id                        Int      @id @default(autoincrement())
  nombre                    String   @unique
  cantidad_neumaticos       Int
  tipo_neumaticos           String
  capacidad_carga           String // e.g., "1000 kg" or "5 personas"
  cantidad_conductores      Int
  ciclo_mantenimiento_km    Int
  es_electrico              Boolean
  // Campos para vehículos eléctricos
  cantidad_baterias         Int?
  tipo_bateria              String?
  amperage                  Float?
  voltage                   Float?
  // Campos para vehículos no eléctricos
  tipo_combustible          String?
  capacidad_tanque          Float?
  indice_consumo            Float?
}

model Driver {
  id       Int      @id @default(autoincrement())
  nombre   String
  licencia String   @unique
  vehicleDrivers    VehicleDriver[] // Explicit many-to-many relation
}

// Join table for many-to-many relationship between Vehicle and Driver
model VehicleDriver {
  vehicleId Int
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  driverId  Int
  driver    Driver  @relation(fields: [driverId], references: [id])

  @@id([vehicleId, driverId]) // Composite primary key
}
